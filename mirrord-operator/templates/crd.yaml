apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: mirrordpolicies.policies.mirrord.metalbear.co
spec:
  group: policies.mirrord.metalbear.co
  names:
    categories: []
    kind: MirrordPolicy
    plural: mirrordpolicies
    shortNames: []
    singular: mirrordpolicy
  scope: Namespaced
  versions:
  - additionalPrinterColumns: []
    name: v1alpha
    schema:
      openAPIV3Schema:
        description: Auto-generated derived type for MirrordPolicySpec via `CustomResource`
        properties:
          spec:
            description: |-
              Custom resource for policies that limit what mirrord features users can use.

              This policy applies only to resources living in the same namespace.
            properties:
              block:
                description: List of features and operations blocked by this policy.
                items:
                  description: Features and operations that can be blocked by `mirrordpolicies` and `mirrordclusterpolicies`.
                  enum:
                  - steal
                  - steal-without-filter
                  - mirror
                  type: string
                type: array
              env:
                default:
                  exclude: []
                description: Controls how mirrord-operator handles user requests to fetch environment variables from the target.
                properties:
                  exclude:
                    default: []
                    description: |-
                      List of environment variables that should be excluded when using mirrord.

                      These environment variables won't be retrieved from the target even if the user specifies them in their `feature.env.include` mirrord config.

                      Variable names can be matched using `*` and `?` where `?` matches exactly one occurrence of any character and `*` matches arbitrary many (including zero) occurrences of any character, e.g. `DATABASE_*` will match `DATABASE_URL` and `DATABASE_PORT`.
                    items:
                      type: string
                    type: array
                type: object
              fs:
                default:
                  local: []
                  notFound: []
                  readOnly: []
                description: Overrides fs ops behaviour, granting control over them to the operator policy, instead of the user config.
                properties:
                  local:
                    default: []
                    description: |-
                      Files that cannot be opened at all.

                      Opening the file will be rejected and mirrord will open the file locally instead.
                    items:
                      type: string
                    type: array
                  notFound:
                    default: []
                    description: |-
                      Files that cannot be opened at all.

                      Opening the file is rejected with an IO error.
                    items:
                      type: string
                    type: array
                  readOnly:
                    default: []
                    description: |-
                      Files that cannot be opened for writing.

                      Opening the file for writing is rejected with an IO error.
                    items:
                      type: string
                    type: array
                type: object
              network:
                default:
                  incoming:
                    httpFilter:
                      headerFilter: null
                description: Fine grained control over network features like specifying required HTTP filters.
                properties:
                  incoming:
                    default:
                      httpFilter:
                        headerFilter: null
                    description: Incoming network operations policy that partialy mimics the mirrord `network.incoming` config.
                    properties:
                      httpFilter:
                        default:
                          headerFilter: null
                        description: Http filter policy that allows to specify requirements for the HTTP filter used in a session.
                        properties:
                          headerFilter:
                            description: |-
                              Require the user's header filter to match this regex, if such filter is provided.

                              This auto enables `steal-without-filter` policy block to require that the user specifies a header filter for the network steal feature.

                              # Composed filters

                              When the user requests an `all_of` HTTP filter, at least one of the nested filters must be a header filter that matches this regex. At least one nested filter is required.

                              When the user requests an `any_of` HTTP filter, all nested header filters must match this regex. At least one nested header filter is required.
                            nullable: true
                            type: string
                        type: object
                    type: object
                type: object
              selector:
                description: If specified in a policy, the policy will only apply to targets with labels that match all of the selector's rules.
                nullable: true
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                          enum:
                          - In
                          - NotIn
                          - Exists
                          - DoesNotExist
                          type: string
                        values:
                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                          items:
                            type: string
                          nullable: true
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    nullable: true
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                    nullable: true
                    type: object
                type: object
              targetPath:
                description: Specify the targets for which this policy applies, in the pod/my-pod deploy/my-deploy notation. Targets can be matched using `*` and `?` where `?` matches exactly one occurrence of any character and `*` matches arbitrary many (including zero) occurrences of any character. If not specified, this policy does not depend on the target's path.
                nullable: true
                type: string
            required:
            - block
            type: object
        required:
        - spec
        title: MirrordPolicy
        type: object
    served: true
    storage: true
    subresources: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: mirrordclusterpolicies.policies.mirrord.metalbear.co
spec:
  group: policies.mirrord.metalbear.co
  names:
    categories: []
    kind: MirrordClusterPolicy
    plural: mirrordclusterpolicies
    shortNames: []
    singular: mirrordclusterpolicy
  scope: Cluster
  versions:
  - additionalPrinterColumns: []
    name: v1alpha
    schema:
      openAPIV3Schema:
        description: Auto-generated derived type for MirrordClusterPolicySpec via `CustomResource`
        properties:
          spec:
            description: |-
              Custom cluster-wide resource for policies that limit what mirrord features users can use.

              This policy applies to resources across all namespaces in the cluster.
            properties:
              block:
                description: List of features and operations blocked by this policy.
                items:
                  description: Features and operations that can be blocked by `mirrordpolicies` and `mirrordclusterpolicies`.
                  enum:
                  - steal
                  - steal-without-filter
                  - mirror
                  type: string
                type: array
              env:
                default:
                  exclude: []
                description: Controls how mirrord-operator handles user requests to fetch environment variables from the target.
                properties:
                  exclude:
                    default: []
                    description: |-
                      List of environment variables that should be excluded when using mirrord.

                      These environment variables won't be retrieved from the target even if the user specifies them in their `feature.env.include` mirrord config.

                      Variable names can be matched using `*` and `?` where `?` matches exactly one occurrence of any character and `*` matches arbitrary many (including zero) occurrences of any character, e.g. `DATABASE_*` will match `DATABASE_URL` and `DATABASE_PORT`.
                    items:
                      type: string
                    type: array
                type: object
              fs:
                default:
                  local: []
                  notFound: []
                  readOnly: []
                description: Overrides fs ops behaviour, granting control over them to the operator policy, instead of the user config.
                properties:
                  local:
                    default: []
                    description: |-
                      Files that cannot be opened at all.

                      Opening the file will be rejected and mirrord will open the file locally instead.
                    items:
                      type: string
                    type: array
                  notFound:
                    default: []
                    description: |-
                      Files that cannot be opened at all.

                      Opening the file is rejected with an IO error.
                    items:
                      type: string
                    type: array
                  readOnly:
                    default: []
                    description: |-
                      Files that cannot be opened for writing.

                      Opening the file for writing is rejected with an IO error.
                    items:
                      type: string
                    type: array
                type: object
              network:
                default:
                  incoming:
                    httpFilter:
                      headerFilter: null
                description: Network operations policy that partialy mimics the mirrord network config.
                properties:
                  incoming:
                    default:
                      httpFilter:
                        headerFilter: null
                    description: Incoming network operations policy that partialy mimics the mirrord `network.incoming` config.
                    properties:
                      httpFilter:
                        default:
                          headerFilter: null
                        description: Http filter policy that allows to specify requirements for the HTTP filter used in a session.
                        properties:
                          headerFilter:
                            description: |-
                              Require the user's header filter to match this regex, if such filter is provided.

                              This auto enables `steal-without-filter` policy block to require that the user specifies a header filter for the network steal feature.

                              # Composed filters

                              When the user requests an `all_of` HTTP filter, at least one of the nested filters must be a header filter that matches this regex. At least one nested filter is required.

                              When the user requests an `any_of` HTTP filter, all nested header filters must match this regex. At least one nested header filter is required.
                            nullable: true
                            type: string
                        type: object
                    type: object
                type: object
              selector:
                description: If specified in a policy, the policy will only apply to targets with labels that match all of the selector's rules.
                nullable: true
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                          enum:
                          - In
                          - NotIn
                          - Exists
                          - DoesNotExist
                          type: string
                        values:
                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                          items:
                            type: string
                          nullable: true
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    nullable: true
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                    nullable: true
                    type: object
                type: object
              targetPath:
                description: Specify the targets for which this policy applies, in the pod/my-pod deploy/my-deploy notation. Targets can be matched using `*` and `?` where `?` matches exactly one occurrence of any character and `*` matches arbitrary many (including zero) occurrences of any character. If not specified, this policy does not depend on the target's path.
                nullable: true
                type: string
            required:
            - block
            type: object
        required:
        - spec
        title: MirrordClusterPolicy
        type: object
    served: true
    storage: true
    subresources: {}
{{ if .Values.operator.sqsSplitting }}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: mirrordworkloadqueueregistries.queues.mirrord.metalbear.co
spec:
  group: queues.mirrord.metalbear.co
  names:
    categories: []
    kind: MirrordWorkloadQueueRegistry
    plural: mirrordworkloadqueueregistries
    shortNames:
    - qs
    singular: mirrordworkloadqueueregistry
  scope: Namespaced
  versions:
  - additionalPrinterColumns: []
    name: v1alpha
    schema:
      openAPIV3Schema:
        description: Auto-generated derived type for MirrordWorkloadQueueRegistrySpec via `CustomResource`
        properties:
          spec:
            description: |-
              Defines a Custom Resource that holds a central configuration for splitting queues for a QueueConsumer (a target workload for which queues should be split).

              This means there should be 1 such resource per queue splitting target.
            properties:
              consumer:
                description: The resource (deployment or Argo rollout) that reads from the queues.
                properties:
                  container:
                    description: If a container is not specified, the workload queue registry will apply to every run that targets any of the workload's containers.
                    nullable: true
                    type: string
                  name:
                    type: string
                  workloadType:
                    description: A workload that is a consumer of a queue that is being split.
                    enum:
                    - Deployment
                    - Rollout
                    type: string
                required:
                - name
                - workloadType
                type: object
              queues:
                additionalProperties:
                  description: The details of a queue that should be split.
                  oneOf:
                  - required:
                    - nameSource
                    - queueType
                  properties:
                    nameSource:
                      description: Where the application gets the queue name from. Will be used to read messages from that queue and distribute them to the output queues. When running with mirrord and splitting this queue, applications will get a modified name from that source.
                      oneOf:
                      - required:
                        - envVar
                      properties:
                        envVar:
                          type: string
                      type: object
                    queueType:
                      enum:
                      - SQS
                      type: string
                    tags:
                      additionalProperties:
                        type: string
                      description: These tags will be set for all temporary SQS queues created by mirrord for queues defined in this MirrordWorkloadQueueRegistry, alongside with the original tags of the respective original queue. In case of a collision, the temporary queue will get the value from the tag passed in here.
                      nullable: true
                      type: object
                  type: object
                description: A map of the queues that should be split. The key is used by users to associate filters to the right queues.
                type: object
            required:
            - consumer
            - queues
            type: object
          status:
            nullable: true
            properties:
              sqsDetails:
                description: Optional even though it's currently the only field, because in the future there will be fields for other queue types.
                nullable: true
                properties:
                  directEnvVars:
                    additionalProperties:
                      type: string
                    description: Names of env vars that contain the queue name directly in the pod template, without config map refs, mapped to their queue id.
                    type: object
                  envUpdates:
                    additionalProperties:
                      properties:
                        originalName:
                          type: string
                        outputName:
                          type: string
                      required:
                      - originalName
                      - outputName
                      type: object
                    type: object
                  queueNames:
                    additionalProperties:
                      properties:
                        originalName:
                          type: string
                        outputName:
                          type: string
                      required:
                      - originalName
                      - outputName
                      type: object
                    description: For each queue_id, the actual queue name as retrieved from the target's pod spec or config map, together with the name of its temporary output queue.
                    type: object
                required:
                - directEnvVars
                - envUpdates
                - queueNames
                type: object
            type: object
        required:
        - spec
        title: MirrordWorkloadQueueRegistry
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: mirrordsqssessions.queues.mirrord.metalbear.co
spec:
  group: queues.mirrord.metalbear.co
  names:
    categories: []
    kind: MirrordSQSSession
    plural: mirrordsqssessions
    shortNames: []
    singular: mirrordsqssession
  scope: Namespaced
  versions:
  - additionalPrinterColumns: []
    name: v1alpha
    schema:
      openAPIV3Schema:
        description: Auto-generated derived type for MirrordSqsSessionSpec via `CustomResource`
        properties:
          spec:
            description: The operator creates this object when a user runs mirrord against a target that is a queue consumer.
            properties:
              queueConsumer:
                description: The target of this session.
                properties:
                  container:
                    description: If a container is not specified, the workload queue registry will apply to every run that targets any of the workload's containers.
                    nullable: true
                    type: string
                  name:
                    type: string
                  workloadType:
                    description: A workload that is a consumer of a queue that is being split.
                    enum:
                    - Deployment
                    - Rollout
                    type: string
                required:
                - name
                - workloadType
                type: object
              queueFilters:
                additionalProperties:
                  additionalProperties:
                    type: string
                  type: object
                description: For each queue_id, a mapping from attribute name, to attribute value regex. The queue_id for a queue is determined at the queue registry. It is not (necessarily) The name of the queue on AWS.
                type: object
              sessionId:
                description: The id of the mirrord exec session, from the operator.
                type: string
            required:
            - queueConsumer
            - queueFilters
            - sessionId
            type: object
          status:
            nullable: true
            oneOf:
            - required:
              - Starting
            - required:
              - RegisteringFilters
            - required:
              - Ready
            - required:
              - StartError
            - required:
              - CleanupError
            properties:
              CleanupError:
                properties:
                  details:
                    nullable: true
                    properties:
                      envUpdates:
                        additionalProperties:
                          properties:
                            originalName:
                              type: string
                            outputName:
                              type: string
                          required:
                          - originalName
                          - outputName
                          type: object
                        description: Env var name -> old and new queue names.
                        type: object
                      queueNames:
                        additionalProperties:
                          properties:
                            originalName:
                              type: string
                            outputName:
                              type: string
                          required:
                          - originalName
                          - outputName
                          type: object
                        description: Queue ID -> old and new queue names.
                        type: object
                    required:
                    - envUpdates
                    - queueNames
                    type: object
                  error:
                    description: Representation of Sqs errors for the status of SQS session resources.
                    properties:
                      reason:
                        description: Human-readable explanation of what went wrong.
                        type: string
                      statusCode:
                        description: HTTP code for operator response.
                        format: uint16
                        minimum: 0.0
                        type: integer
                    required:
                    - reason
                    - statusCode
                    type: object
                required:
                - error
                type: object
              Ready:
                properties:
                  envUpdates:
                    additionalProperties:
                      properties:
                        originalName:
                          type: string
                        outputName:
                          type: string
                      required:
                      - originalName
                      - outputName
                      type: object
                    description: Env var name -> old and new queue names.
                    type: object
                  queueNames:
                    additionalProperties:
                      properties:
                        originalName:
                          type: string
                        outputName:
                          type: string
                      required:
                      - originalName
                      - outputName
                      type: object
                    description: Queue ID -> old and new queue names.
                    type: object
                required:
                - envUpdates
                - queueNames
                type: object
              RegisteringFilters:
                description: SQS operator sets this status before it starts registering filters, so that if anything fails during the registration of filters, we have all the queues we need to delete on cleanup.
                properties:
                  envUpdates:
                    additionalProperties:
                      properties:
                        originalName:
                          type: string
                        outputName:
                          type: string
                      required:
                      - originalName
                      - outputName
                      type: object
                    description: Env var name -> old and new queue names.
                    type: object
                  queueNames:
                    additionalProperties:
                      properties:
                        originalName:
                          type: string
                        outputName:
                          type: string
                      required:
                      - originalName
                      - outputName
                      type: object
                    description: Queue ID -> old and new queue names.
                    type: object
                required:
                - envUpdates
                - queueNames
                type: object
              StartError:
                description: Representation of Sqs errors for the status of SQS session resources.
                properties:
                  reason:
                    description: Human-readable explanation of what went wrong.
                    type: string
                  statusCode:
                    description: HTTP code for operator response.
                    format: uint16
                    minimum: 0.0
                    type: integer
                required:
                - reason
                - statusCode
                type: object
              Starting:
                properties:
                  start_time_utc:
                    type: string
                required:
                - start_time_utc
                type: object
            type: object
        required:
        - spec
        title: MirrordSqsSession
        type: object
    served: true
    storage: true
    subresources:
      status: {}
{{ end }}
{{ if .Values.operator.kafkaSplitting}}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: mirrordkafkaclientconfigs.queues.mirrord.metalbear.co
spec:
  group: queues.mirrord.metalbear.co
  names:
    categories: []
    kind: MirrordKafkaClientConfig
    plural: mirrordkafkaclientconfigs
    shortNames: []
    singular: mirrordkafkaclientconfig
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Name of parent configuration.
      jsonPath: .spec.parent
      name: PARENT
      type: string
    - description: Name of Secret to load from.
      jsonPath: .spec.loadFromSecret
      name: SECRET
      type: string
    name: v1alpha
    schema:
      openAPIV3Schema:
        description: Auto-generated derived type for MirrordKafkaClientConfigSpec via `CustomResource`
        properties:
          spec:
            description: Configuration to use when creating operator's Kafka client. Resources of this kind should live in the operator's namespace.
            properties:
              loadFromSecret:
                description: |-
                  Namespace and name of a `Secret` to use as another source of properties.

                  The secret is fetched and entries in its `.data` field are resolved to properties. Properties resolved this way override properties from the parent configuration. Properties defined inline in this object override properties resolved from the secret.

                  Example value: `default/my-secret`
                nullable: true
                type: string
              parent:
                description: Name of parent resource to use as base when resolving final configuration.
                nullable: true
                type: string
              properties:
                description: |-
                  Properties to set.

                  When performing Kafka splitting, the operator will override `group.id` property.

                  The list of all available properties can be found [here](https://github.com/confluentinc/librdkafka/blob/master/CONFIGURATION.md).
                items:
                  description: Property to use when creating operator's Kafka client.
                  properties:
                    name:
                      description: Name of the property, e.g `bootstrap.servers`.
                      type: string
                    value:
                      description: Value for the property, e.g `kafka.default.svc.cluster.local:9092`. `null` clears the property from parent resource when resolving the final configuration.
                      nullable: true
                      type: string
                  required:
                  - name
                  type: object
                type: array
            required:
            - properties
            type: object
        required:
        - spec
        title: MirrordKafkaClientConfig
        type: object
    served: true
    storage: true
    subresources: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: mirrordkafkaephemeraltopics.queues.mirrord.metalbear.co
spec:
  group: queues.mirrord.metalbear.co
  names:
    categories: []
    kind: MirrordKafkaEphemeralTopic
    plural: mirrordkafkaephemeraltopics
    shortNames: []
    singular: mirrordkafkaephemeraltopic
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Name of the topic.
      jsonPath: .spec.name
      name: NAME
      type: string
    - description: Name of MirrordKafkaClientProperties to use when creating Kafka client.
      jsonPath: .spec.clientConfig
      name: CLIENT-CONFIG
      type: string
    name: v1alpha
    schema:
      openAPIV3Schema:
        description: Auto-generated derived type for MirrordKafkaEphemeralTopicSpec via `CustomResource`
        properties:
          spec:
            description: |-
              Ephemeral topic created in your Kafka cluster for the purpose of running a Kafka splitting session.

              Resources of this kind should live in the operator's namespace. They will be used to clean up topics that are no longer used.
            properties:
              clientConfig:
                description: Links to [`MirrordKafkaClientConfigSpec`] resource living in the same namespace.
                type: string
              name:
                description: Name of the topic.
                type: string
            required:
            - clientConfig
            - name
            type: object
        required:
        - spec
        title: MirrordKafkaEphemeralTopic
        type: object
    served: true
    storage: true
    subresources: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: mirrordkafkatopicsconsumers.queues.mirrord.metalbear.co
spec:
  group: queues.mirrord.metalbear.co
  names:
    categories: []
    kind: MirrordKafkaTopicsConsumer
    plural: mirrordkafkatopicsconsumers
    shortNames: []
    singular: mirrordkafkatopicsconsumer
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Name of the topic consumer workload.
      jsonPath: .spec.consumerName
      name: CONSUMER-NAME
      type: string
    - description: Kind of the topic consumer workload.
      jsonPath: .spec.consumerKind
      name: CONSUMER-KIND
      type: string
    - description: Api version of the topic consumer workload.
      jsonPath: .spec.consumerApiVersion
      name: CONSUMER-API-VERSION
      type: string
    - description: Timeout for consumer workload restart.
      jsonPath: .spec.consumerRestartTimeout
      name: CONSUMER-RESTART-TIMEOUT
      type: string
    name: v1alpha
    schema:
      openAPIV3Schema:
        description: Auto-generated derived type for MirrordKafkaTopicsConsumerSpec via `CustomResource`
        properties:
          spec:
            description: |-
              Defines splittable Kafka topics consumed by some workload living in the same namespace.

              # Concurrent splitting

              Concurrent Kafka splitting sessions are allowed, as long as they use the same topic id or their topics' `nameSources` do not overlap.

              # Example

              ```yaml apiVersion: queues.mirrord.metalbear.co/v1alpha kind: MirrordKafkaTopicsConsumer metadata: name: example namespace: default spec: consumerName: example-deployment consumerApiVersion: apps/v1 consumerKind: Deployment topics: - id: example-topic nameSources: - directEnvVar: container: example-container name: KAFKA_TOPIC_NAME groupIdSources: - directEnvVar: container: example-container name: KAFKA_GROUP_ID clientConfig: example-config ```

              1. Creating the resource below will enable Kafka splitting on a deployment `example-deployment` living in namespace `default`. Id `example-topic` can be then used in the mirrord config to split the topic for the duration of the mirrord session.

              2. Topic name will be resolved based on `example-deployment`'s pod template by extracting value of variable `KAFKA_TOPIC_NAME` defined directly in `example-container`.

              3. Consumer group id used by the mirrord operator will be resolved based on `example-deployment`'s pod template by extracting value of variable `KAFKA_GROUP_ID` defined directly in `example-container`.

              4. For the duration of the session, `example-deployment` will be patched - the mirrord operator will substitute topic name in `KAFKA_TOPIC_NAME` variable with a name of an ephemeral Kafka topic.

              5. Local application will see a different value of the `KAFKA_TOPIC_NAME` - it will be a name of another ephemeral Kafka topic.

              6. `MirrordKafkaClientConfig` named `example-config` living in mirrord operator's namespace will be used to manage ephemeral Kafka topics and consume/produce messages.
            properties:
              consumerApiVersion:
                description: Workload api version, for example `apps/v1`.
                type: string
              consumerKind:
                description: Workload kind, for example `Deployment`.
                type: string
              consumerName:
                description: Workload name, for example `my-deployment`.
                type: string
              consumerRestartTimeout:
                description: |-
                  Timeout for waiting until workload patch takes effect, that is at least one pod reads from the ephemeral topic.

                  Specified in seconds. Defaults to 60s.
                format: uint32
                minimum: 0.0
                nullable: true
                type: integer
              topics:
                description: List of consumed splittable topics.
                items:
                  description: Splittable Kafka topic consumed by some remote target.
                  properties:
                    clientConfig:
                      description: Links to [`MirrordKafkaClientConfig`] in the operator's namespace. This config will be used to manage ephemeral Kafka topics and consume/produce messages.
                      type: string
                    groupIdSources:
                      description: All occurrences of this topic's group id in the workload's pod template.
                      items:
                        description: Source of some topic property required for Kafka splitting.
                        oneOf:
                        - required:
                          - directEnvVar
                        properties:
                          directEnvVar:
                            description: Environment variable with value defined directly in the pod template.
                            properties:
                              container:
                                description: Name of the container.
                                type: string
                              variable:
                                description: Name of the variable.
                                type: string
                            required:
                            - container
                            - variable
                            type: object
                        type: object
                      type: array
                    id:
                      description: Id of this topic. Can be used in mirrord config to identify this topic.
                      type: string
                    nameSources:
                      description: All occurrences of this topic's name in the workload's pod template.
                      items:
                        description: Source of some topic property required for Kafka splitting.
                        oneOf:
                        - required:
                          - directEnvVar
                        properties:
                          directEnvVar:
                            description: Environment variable with value defined directly in the pod template.
                            properties:
                              container:
                                description: Name of the container.
                                type: string
                              variable:
                                description: Name of the variable.
                                type: string
                            required:
                            - container
                            - variable
                            type: object
                        type: object
                      type: array
                  required:
                  - clientConfig
                  - groupIdSources
                  - id
                  - nameSources
                  type: object
                type: array
            required:
            - consumerApiVersion
            - consumerKind
            - consumerName
            - topics
            type: object
        required:
        - spec
        title: MirrordKafkaTopicsConsumer
        type: object
    served: true
    storage: true
    subresources: {}
{{ end }}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: mirrordtlsstealconfigs.mirrord.metalbear.co
spec:
  group: mirrord.metalbear.co
  names:
    categories: []
    kind: MirrordTlsStealConfig
    plural: mirrordtlsstealconfigs
    shortNames: []
    singular: mirrordtlsstealconfig
  scope: Namespaced
  versions:
  - additionalPrinterColumns: []
    name: v1alpha
    schema:
      openAPIV3Schema:
        description: Auto-generated derived type for MirrordTlsStealConfigSpec via `CustomResource`
        properties:
          spec:
            description: |-
              Custom resource for configuring how the mirrord-agent handles stealing TLS traffic from selected targets.

              Namespaced.
            properties:
              ports:
                description: Configuration for stealing TLS traffic, separate for each port.
                items:
                  description: Configures TLS setup for stealing traffic from some port.
                  properties:
                    agentAsClient:
                      description: |-
                        Configures how mirrord-agent authenticates itself and the server when acting as a TLS client.

                        mirrord-agent acts as a TLS client when passing unmatched requests to their original destination.
                      properties:
                        authentication:
                          description: |-
                            Configures how mirrord-agent authenticates itself to the original destination server.

                            Optional. If not present, mirrord-agent will make connections anonymously.
                          nullable: true
                          properties:
                            certPem:
                              description: |-
                                Path to a PEM file containing a certificate chain to use.

                                This file must contain at least one certificate. It can contain entries of other types, e.g private keys, which are ignored.
                              type: string
                            keyPem:
                              description: |-
                                Path to a PEM file containing a private key matching the certificate chain found in `cert_pem`.

                                This file must contain exactly one private key. It can contain entries of other types, e.g certificates, which are ignored.
                              type: string
                          required:
                          - certPem
                          - keyPem
                          type: object
                        verification:
                          description: Configures how mirrord-agent verifies the server's certificate.
                          properties:
                            acceptAnyCert:
                              description: |-
                                Whether to accept any certificate, regardless of its validity and who signed it.

                                Optional. Defaults to `false`.
                              type: boolean
                            trustRoots:
                              description: |-
                                Paths to PEM files and directories with PEM files containing allowed root certificates.

                                Directories are not traversed recursively.

                                Each certificate found in the files is treated as an allowed root. The files can contain entries of other types, e.g private keys, which are ignored.

                                Optional. Defaults to an empty list.
                              items:
                                type: string
                              type: array
                          type: object
                      required:
                      - verification
                      type: object
                    agentAsServer:
                      description: |-
                        Configures how mirrord-agent authenticates itself and the clients when acting as a TLS server.

                        mirrord-agent acts as a TLS server when accepting stolen connections.
                      properties:
                        alpnProtocols:
                          description: |-
                            ALPN protocols supported by the server, in order of preference.

                            If empty, ALPN is disabled.

                            Optional. Defaults to en ampty list.
                          items:
                            type: string
                          type: array
                        authentication:
                          description: Configures how the server authenticates itself to the clients.
                          properties:
                            certPem:
                              description: |-
                                Path to a PEM file containing a certificate chain to use.

                                This file must contain at least one certificate. It can contain entries of other types, e.g private keys, which are ignored.
                              type: string
                            keyPem:
                              description: |-
                                Path to a PEM file containing a private key matching the certificate chain found in `cert_pem`.

                                This file must contain exactly one private key. It can contain entries of other types, e.g certificates, which are ignored.
                              type: string
                          required:
                          - certPem
                          - keyPem
                          type: object
                        verification:
                          description: |-
                            Configures how mirrord-agent's server verifies the clients.

                            Optional. If not present, the server will not offer client authentication at all.
                          nullable: true
                          properties:
                            acceptAnyCert:
                              description: |-
                                Whether to accept any certificate, regardless of its validity and who signed it.

                                Note that this setting does not affect whether anononymous clients are accepted or not. If `allow_anonymous` is not set, a certificate will still be required.

                                Optional. Defaults to `false`.
                              type: boolean
                            allowAnonymous:
                              description: |-
                                Whether anonymous clients should be accepted.

                                Optional. Defaults to `false`.
                              type: boolean
                            trustRoots:
                              description: |-
                                Paths to PEM files and directories with PEM files containing allowed root certificates.

                                Directories are not traversed recursively.

                                Each certificate found in the files is treated as an allowed root. The files can contain entries of other types, e.g private keys, which are ignored.

                                Optional. Defaults to an empty list.
                              items:
                                type: string
                              type: array
                          type: object
                      required:
                      - authentication
                      type: object
                    port:
                      description: Remote port to which this configuration applies.
                      format: uint16
                      minimum: 0.0
                      type: integer
                  required:
                  - agentAsClient
                  - agentAsServer
                  - port
                  type: object
                type: array
              selector:
                description: If this selector is provided, this configuration will only apply to targets with labels that match all of the selector's rules.
                nullable: true
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                          enum:
                          - In
                          - NotIn
                          - Exists
                          - DoesNotExist
                          type: string
                        values:
                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                          items:
                            type: string
                          nullable: true
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    nullable: true
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                    nullable: true
                    type: object
                type: object
              targetPath:
                description: |-
                  Specify the targets for which this configuration applies, in the `pod/my-pod`, `deploy/my-deploy/container/my-container` notation.

                  Targets can be matched using `*` and `?` where `?` matches exactly one occurrence of any character and `*` matches arbitrary many (including zero) occurrences of any character. If not specified, this configuration does not depend on the target's path.
                nullable: true
                type: string
            required:
            - ports
            type: object
        required:
        - spec
        title: MirrordTlsStealConfig
        type: object
    served: true
    storage: true
    subresources: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: mirrordclustertlsstealconfigs.mirrord.metalbear.co
spec:
  group: mirrord.metalbear.co
  names:
    categories: []
    kind: MirrordClusterTlsStealConfig
    plural: mirrordclustertlsstealconfigs
    shortNames: []
    singular: mirrordclustertlsstealconfig
  scope: Cluster
  versions:
  - additionalPrinterColumns: []
    name: v1alpha
    schema:
      openAPIV3Schema:
        description: Auto-generated derived type for MirrordClusterTlsStealConfigSpec via `CustomResource`
        properties:
          spec:
            description: |-
              Custom resource for configuring how the mirrord-agent handles stealing TLS traffic from selected targets.

              Clusterwide.
            properties:
              ports:
                description: Configuration for stealing TLS traffic, separate for each port.
                items:
                  description: Configures TLS setup for stealing traffic from some port.
                  properties:
                    agentAsClient:
                      description: |-
                        Configures how mirrord-agent authenticates itself and the server when acting as a TLS client.

                        mirrord-agent acts as a TLS client when passing unmatched requests to their original destination.
                      properties:
                        authentication:
                          description: |-
                            Configures how mirrord-agent authenticates itself to the original destination server.

                            Optional. If not present, mirrord-agent will make connections anonymously.
                          nullable: true
                          properties:
                            certPem:
                              description: |-
                                Path to a PEM file containing a certificate chain to use.

                                This file must contain at least one certificate. It can contain entries of other types, e.g private keys, which are ignored.
                              type: string
                            keyPem:
                              description: |-
                                Path to a PEM file containing a private key matching the certificate chain found in `cert_pem`.

                                This file must contain exactly one private key. It can contain entries of other types, e.g certificates, which are ignored.
                              type: string
                          required:
                          - certPem
                          - keyPem
                          type: object
                        verification:
                          description: Configures how mirrord-agent verifies the server's certificate.
                          properties:
                            acceptAnyCert:
                              description: |-
                                Whether to accept any certificate, regardless of its validity and who signed it.

                                Optional. Defaults to `false`.
                              type: boolean
                            trustRoots:
                              description: |-
                                Paths to PEM files and directories with PEM files containing allowed root certificates.

                                Directories are not traversed recursively.

                                Each certificate found in the files is treated as an allowed root. The files can contain entries of other types, e.g private keys, which are ignored.

                                Optional. Defaults to an empty list.
                              items:
                                type: string
                              type: array
                          type: object
                      required:
                      - verification
                      type: object
                    agentAsServer:
                      description: |-
                        Configures how mirrord-agent authenticates itself and the clients when acting as a TLS server.

                        mirrord-agent acts as a TLS server when accepting stolen connections.
                      properties:
                        alpnProtocols:
                          description: |-
                            ALPN protocols supported by the server, in order of preference.

                            If empty, ALPN is disabled.

                            Optional. Defaults to en ampty list.
                          items:
                            type: string
                          type: array
                        authentication:
                          description: Configures how the server authenticates itself to the clients.
                          properties:
                            certPem:
                              description: |-
                                Path to a PEM file containing a certificate chain to use.

                                This file must contain at least one certificate. It can contain entries of other types, e.g private keys, which are ignored.
                              type: string
                            keyPem:
                              description: |-
                                Path to a PEM file containing a private key matching the certificate chain found in `cert_pem`.

                                This file must contain exactly one private key. It can contain entries of other types, e.g certificates, which are ignored.
                              type: string
                          required:
                          - certPem
                          - keyPem
                          type: object
                        verification:
                          description: |-
                            Configures how mirrord-agent's server verifies the clients.

                            Optional. If not present, the server will not offer client authentication at all.
                          nullable: true
                          properties:
                            acceptAnyCert:
                              description: |-
                                Whether to accept any certificate, regardless of its validity and who signed it.

                                Note that this setting does not affect whether anononymous clients are accepted or not. If `allow_anonymous` is not set, a certificate will still be required.

                                Optional. Defaults to `false`.
                              type: boolean
                            allowAnonymous:
                              description: |-
                                Whether anonymous clients should be accepted.

                                Optional. Defaults to `false`.
                              type: boolean
                            trustRoots:
                              description: |-
                                Paths to PEM files and directories with PEM files containing allowed root certificates.

                                Directories are not traversed recursively.

                                Each certificate found in the files is treated as an allowed root. The files can contain entries of other types, e.g private keys, which are ignored.

                                Optional. Defaults to an empty list.
                              items:
                                type: string
                              type: array
                          type: object
                      required:
                      - authentication
                      type: object
                    port:
                      description: Remote port to which this configuration applies.
                      format: uint16
                      minimum: 0.0
                      type: integer
                  required:
                  - agentAsClient
                  - agentAsServer
                  - port
                  type: object
                type: array
              selector:
                description: If this selector is provided, this configuration will only apply to targets with labels that match all of the selector's rules.
                nullable: true
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                          enum:
                          - In
                          - NotIn
                          - Exists
                          - DoesNotExist
                          type: string
                        values:
                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                          items:
                            type: string
                          nullable: true
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    nullable: true
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                    nullable: true
                    type: object
                type: object
              targetPath:
                description: |-
                  Specify the targets for which this configuration applies, in the `pod/my-pod`, `deploy/my-deploy/container/my-container` notation.

                  Targets can be matched using `*` and `?` where `?` matches exactly one occurrence of any character and `*` matches arbitrary many (including zero) occurrences of any character. If not specified, this configuration does not depend on the target's path.
                nullable: true
                type: string
            required:
            - ports
            type: object
        required:
        - spec
        title: MirrordClusterTlsStealConfig
        type: object
    served: true
    storage: true
    subresources: {}
