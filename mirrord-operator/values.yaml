# Default values for mirrord-operator.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

namespace: mirrord

## Whether we should create the namespace or not
## If you set this to false, you must create the namespace manually
createNamespace: true

## For each namespace you'd like a namespaced role to be created in, add here.
## The chart will create a role that is required to use mirrord in the namespace
## and it can be bound via rolebinding (That you need to create yourself).
roleNamespaces: []

role:
  # Note there's a cluster role version of it below.
  mirrord-operator-user:
    # add labels to the role, for i.e aggregate RBAC
    labels: {}

clusterRole:
  mirrord-operator-user-basic:
    # add labels to the role, for i.e aggregate RBAC
    labels: {}
  mirrord-operator-user:
    # add labels to the role, for i.e aggregate RBAC
    labels: {}

operator:
  image: ghcr.io/metalbear-co/operator
  podAnnotations: {}
  podLabels: {}
  jsonLog: false
  # Has to be set to `true` in order to use the SQS queue splitting feature.
  sqsSplitting: false
  # Has to be set to `true` in order to use the Kafka queue splitting feature.
  kafkaSplitting: false
  # Has to be set to `true` in order to use the argocd application auto-sync pause feature.
  applicationPauseAutoSync: false
  # Enable prometheus metrics endpoint
  metrics: false

  # imagePullSecrets:
  #   - name: value
  
  ## stop using container args for agent config, as now you can just use agent.extraConfig
  ## also imagePullSecrets is re-used from operator.imagePullSecrets
  # containerArgs:
  #   - '--agent-config'
  #   - '{"image_pull_secrets":[{"name":"docker"}]}'

  ## You can use this only if using Enterprise license.
  disableTelemetries: false

  ## Controls how long (in seconds) a session is allowed to live for.
  # maxSessionTimeSeconds: 3600

  ## Controls how long (in milliseconds) a session can live when there are no pods ready to be targeted.
  # noPodTargetsSessionTimeoutMillis: 6000

  ## This should be enough for around 200~ concurrent sessions.
  limits:
    cpu: 200m
    memory: 200Mi

  ## Allow to specify tolerations for operator deployment
  # tolerations:
  #   - key: "key1"
  #     operator: "Equal"
  #     value: "value1"
  #     effect: "NoSchedule"

  # affinity:
  #   podAntiAffinity:
  #     requiredDuringSchedulingIgnoredDuringExecution:
  #       - topologyKey: kubernetes.io/hostname
  #         labelSelector:
  #           matchLabels:
  #             k8s-app: mirrord

  # nodeSelector:
  #   kubernetes.io/os: linux

  # Port for operator to listen on. If you can't listen on 443 due to privilege issues
  # you can change this to 3000/8443 or whatever you want - just make sure that nodes
  # can communicate on that port if it doesn't work then.
  port: 443


  copyTarget:
    # by default, the operator will create a dummy container using the agent image
    # as it is guaranteed to have a sleep binary. If you want the operator
    # to use the target's image, set this value to false and make sure it has sleep binary
    useAgentImage: true

agent:
  ## example
  ##
  ## image: 
  ##   registry: "your-internal.registry.io/metalbear-co/agent"
  ##   tag: "latest"
  ##
  ## or
  ##
  ## image: "your-internal.registry.io/metalbear-co/agent:latest"
  ##
  # image: 
    # registry: "ghcr.io/metalbear-co/mirrord"
    # tag: "latest"


  # If you want the operator to secure agent connections with TLS, set this value to true.
  # This option requires agent version at least 3.97.0.
  tls: false
  ## use this if you want to add settings that aren't covered by the values.yaml
  ## see possible settings here: https://mirrord.dev/docs/reference/configuration/#root-agent
  extraConfig:
  #  json_log: false
  #  labels: { "user": "meow" }
  #  annotations: { "cats.io/inject": "enabled" }
  #  tolerations:
  #    - operator: Exists
  #  privileged: true

license:
  key: ""
  file:
    secret: mirrord-operator-license
    # data:
    #   license.pem:
  keyRef: ""
  pemRef: ""

service:
  name: mirrord-operator

sa:
  name: mirrord-operator

  ## aws role arn to annotate for eks iam assumption
  # roleArn: arn:aws:iam::111122223333:role/mirrord-operator-role

tls:
  secret: mirrord-operator-tls

  # if you're using a verified certificate, set this value to false.
  apiService:
    insecureSkipTLSVerify: true

  # if certmanager is disabled and no tls.key and tls.crt is set,
  # the operator will generate a self-signed certificate.
  certManager:
    enabled: false

    issuer: mirrord-operator-issuer
    certificate: mirrord-operator-tls

  data:
    tls.key: ""
    tls.crt: ""

# if you run on OpenShift, set this value to true to get a SCC in the yaml.
openshift: false
